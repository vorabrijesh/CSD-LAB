// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM32K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux(in=load,sel=address[0],a=r0,b=r1);
    RAM16K(in=in,load=r0,address=address[1..14],out=o0);
    RAM16K(in=in,load=r1,address=address[1..14],out=o1);
    Mux16(a=o0,b=o1,sel=address[0],out=out);
    
}
